@model MenuVM

<form id="menuForm" method="post" enctype="multipart/form-data">
    <div class="border p-3 mt-4">

        <div class="row pb-2">
            <h4>@(Model.Menu.Id != 0 ? "Update" : "Create") Menu</h4>
            <hr />
        </div>
        <input asp-for="Menu.Id" hidden />
        <div asp-validation-summary="All"></div>
        <div class="row">
            <div class="col-10">
                <div class="form-group mb-3">
                    <label asp-for="Menu.Date" class="control-label pb-1"></label>
                    <input asp-for="Menu.Date" class="form-control" />
                    <span asp-validation-for="Menu.Date" class="text-danger"></span>
                </div>
                <div class="form-check mb-3">
                    <input asp-for="StatusForDisplay" class="form-check-input" type="checkbox" id="menuStatusDisplay" />
                    <label class="form-check-label" for="menuStatusDisplay">Active</label>
                    <span asp-validation-for="StatusForDisplay" class="text-danger"></span>
                </div>
                
                <div class="border p-3 mt-4" id="menurecipes-container">
                    <div class="row pb-2">
                        <h4>MenuRecipes</h4>
                        <hr />
                    </div>
                    

                    <div id="MenuRecipes">
                        @{
                            int i = 0; // Initialize the counter outside of the loop
                        }
                        @foreach (var entry in Model.RecipeMealDict)
                        {
                             <input type="hidden" asp-for="MenuRecipes[i].Id" /> 
                            <div class="menurecipe-group row">
                                <div class="col-md-3 form-group mb-3">
                                    <label class="control-label">Select Recipe for @entry.Key.Name</label>
                                    <select asp-for="@Model.MenuRecipes[i].RecipeId" asp-items="entry.Value" class="form-select">
                                        <option disabled selected>Select Product</option>
                                    </select>
                                    <span asp-validation-for="MenuRecipes[i].RecipeId" class="text-danger"></span>
                                </div>

                                <div class="col-md-3 form-group mb-3">
                                    <label asp-for="MenuRecipes[i].Servings" class="control-label"></label>
                                    <input asp-for="MenuRecipes[i].Servings" class="form-control" />
                                    <span asp-validation-for="MenuRecipes[i].Servings" class="text-danger"></span>
                                </div>
                            
                            </div>
                            i++;
                        }
                    </div>
                
            </div>
                <div class="row">
                    @if (Model.Menu.Id != 0)
                    {
                        <div class="col-6 col-md-3">
                            <button type="submit" class="btn btn-primary form-control" style="height:50px">Edit</button>
                        </div>
                    }
                    else
                    {
                        <div class="col-6 col-md-3">
                            <button type="submit" class="btn btn-primary form-control" style="height:50px">Create</button>
                        </div>
                    }
                    <div class="col-6 col-md-3">
                        <a asp-controller="Menu" asp-action="Index" class="btn btn-secondary form-control d-flex justify-content-center align-items-center" style="height: 50px">
                            Menu List
                        </a>
                    </div>
                </div>

        </div>




     </div>
</form> 

 @section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        $(document).ready(function () {
            $('form').submit(function (e) {
                e.preventDefault();
                var formData = new FormData(this);
                $.ajax({
                    url: $(this).attr('action'),
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Success',
                                text: response.message,
                                icon: 'success'
                            }).then((result) => {
                                window.location.href = '@Url.Action("Index", "Menu")'; // Redirect to menu index
                            });
                        } else {
                            Swal.fire({
                                title: 'Insufficient Resources',
                                text: response.message,
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonText: 'Make Shopping List',
                                cancelButtonText: 'Cancel'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    // Prepare the base URL
                                    var baseUrl = '@Url.Action("Index", "Order")';
                                    // Serialize the orders data and append it as a query parameter
                                    var ordersData = encodeURIComponent(JSON.stringify(response.orders));
                                    // Redirect to the Order Index with orders data
                                    window.location.href = baseUrl + '?orders=' + ordersData;
                                }
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire('Error', 'An error occurred while processing your request: ' + error, 'error');
                    }
                });
            });
        });
    </script>
    
}  
